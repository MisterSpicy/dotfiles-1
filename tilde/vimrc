" This vimrc is "inspired" by @moonglum, @garybernhardt and @railsbros-dirk
" Thanks to all of you for letting me steal your stuff :)

" Use Vim settings, rather then Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible
" This is required for Vundle
filetype off
" Activate Syntax Highlight
syntax enable
" set default encoding to UTF-8
set encoding=utf-8

" Highlight search results
set hlsearch
" Incremental search, search as you type
set incsearch
" Ignore case when searching
set ignorecase smartcase
" Ignore case when searching lowercase
set smartcase

" Deactivate Wrapping
set nowrap
" Treat all numbers as decimal
set nrformats=
" I don't like Swapfiles
set noswapfile
" Don't make a backup before overwriting a file.
set nobackup
" And again.
set nowritebackup
" I prefer , to be the leader key
let mapleader = ","
noremap \ ,
" show line numbers
set number
" MOAR colors
set t_Co=256
" Unselect the search result
map <Leader><Space> :noh<CR>
" nnoremap <esc> :noh<return><esc>
" Better buffer handling
set hidden
" hightlight cursor position
set cursorline

" Use the clipboard of Mac OS
if has('mac')
  set clipboard=unnamed
end

" Enable mouse
set mouse=a
" Set the title of the iterm tab
set title

" no timeout, make switching modes easier
set timeoutlen=1000 ttimeoutlen=0

" === Vundle Setup ===
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
Bundle 'gmarik/vundle'

" CtrlP: Full path fuzzy finder
Bundle "kien/ctrlp.vim"

let g:ctrlp_custom_ignore = {
    \ 'dir':  '\.git$\|\.hg$\|\.svn$',
    \ 'file': '\.pyc$\|\.pyo$\|\.rbc$|\.rbo$\|\.class$\|\.o$\|\~$\',
    \ 'doc': 'doc$'
    \ }

let g:ctrlp_working_path_mode = 0
let g:ctrlp_match_window_reversed = 0

" Nerdtree
Bundle "scrooloose/nerdtree"
let NERDTreeIgnore=['\.pyc$', '\.pyo$', '\.rbc$', '\.rbo$', '\.class$', '\.o$', '\~$']
noremap <C-n> :NERDTreeToggle<CR>
noremap <leader>n :NERDTreeToggle<CR>
let g:ctrlp_dont_split = 'NERD_tree_2'

" Color Theme
Bundle "chriskempson/vim-tomorrow-theme"
colorscheme Tomorrow-Night-Bright

" Polyglot: A collection of language packs, loaded on demand
Bundle "sheerun/vim-polyglot"
" Added Javascript Template Support
au BufNewFile,BufRead *.ejs set filetype=jst

" Syntastic: Really great Syntax checker
Bundle "scrooloose/syntastic"
let g:syntastic_enable_signs=1
let g:syntastic_quiet_warnings=0
let g:syntastic_auto_loc_list=2
let g:syntastic_javascript_checkers = ['jsl']

" Use Node.js for JavaScript interpretation
let $JS_CMD='node'

" ack.vim: ack integration
Bundle "mileszs/ack.vim"

" Better statusbar
Bundle "bling/vim-airline"
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1
let g:airlinetheme = "powerlineish"
set laststatus=2

Bundle "tpope/vim-fugitive"

" Git Gutter: shows a git diff in the gutter
Bundle "airblade/vim-gitgutter"
" without any weird color
highlight clear SignColumn

" Cool Undo Tree
Bundle "sjl/gundo.vim"
noremap <Leader>g :GundoToggle<CR>

" Tab completion
Bundle "ervandew/supertab"

" Start rspec the smart way
Bundle "skalnik/vim-vroom"

" Zooming into Windows
Bundle "vim-scripts/ZoomWin"

" Search in Dash
Bundle 'rizzatti/funcoo.vim'
Bundle 'rizzatti/dash.vim'
let g:dash_map = {
        \ 'ruby'       : 'rb',
        \ 'javascript' : 'js'
        \ }
noremap <leader>d :Dash<CR>

" Better * search for selections.
" http://vimcasts.org/episodes/search-for-the-selected-text/
Bundle 'nelstrom/vim-visual-star-search'

" Open Markdown files in Marked
Bundle "itspriddle/vim-marked"
noremap <leader>m :MarkedOpen<CR>

" Smart line number toggle
Bundle "jeffkreeftmeijer/vim-numbertoggle"

" Toggle comment blocks
Bundle "tpope/vim-commentary"

" Show invisible characters:
" Tabs and trailing whitespace
set list
set listchars=tab:â€º\ ,trail:.
" Tabs should be 2 spaces

set tabstop=2
" Soft-Tabs should be 2 spaces
set softtabstop=2
" When shifting, use 2 spaces
set shiftwidth=2
" Use Soft-Tabs
set expandtab
" backspace through everything in insert mode
set backspace=indent,eol,start
" Makefiles require tabs
autocmd FileType make setlocal noexpandtab

" Highlight Characters that overstep the 100 character limit
match ErrorMsg '\%>100v.\+'

" Automatically set the indent of a new line (local to buffer)
" from railsbros-dirk
set ai

" Disable output and VCS files
set wildignore+=*.o,*.out,*.obj,.git,*.rbc,*.rbo,*.class,.svn,*.gem

" Disable archive files
set wildignore+=*.zip,*.tar.gz,*.tar.bz2,*.rar,*.tar.xz

" Ignore bundler and sass cache
set wildignore+=*/vendor/gems/*,*/vendor/cache/*,*/.bundle/*,*/.sass-cache/*

" Disable temp and backup files
set wildignore+=*.swp,*~,._*

" Make sure all markdown files have the correct filetype
au BufRead,BufNewFile *.{md,markdown,mdown,mkd,mkdn,txt} set ft=markdown

" Set the Ruby filetype for a number of common Ruby files without .rb
au BufRead,BufNewFile {Gemfile,Rakefile,Vagrantfile,Thorfile,Procfile,Guardfile,
      \config.ru,*.rake,*.rabl,*.god,*.jbuilder} set ft=ruby

" Treat JSON files like JavaScript
au BufNewFile,BufRead {*.json,*.jsm} set ft=javascript

" Recognize CoffeeScript
au BufNewFile,BufRead *.coffee set ft=coffee

" Make cursor move by visual lines instead of file lines (when wrapping)
noremap k gk
noremap j gj

" Remove unwanted spaces command
command Leerzeichen :%!git stripspace < %

" upper/lower word
nnoremap <leader>u mQviwU`Q
nnoremap <leader>l mQviwu`Q

" upper/lower first char of word
nnoremap <leader>U mQgewvU`Q
nnoremap <leader>L mQgewvu`Q

" Move selected block
nnoremap <C-j> :m .+1<CR>==
nnoremap <C-k> :m .-2<CR>==
inoremap <C-j> <Esc>:m .+1<CR>==gi
inoremap <C-k> <Esc>:m .-2<CR>==gi
vnoremap <C-j> :m '>+1<CR>gv=gv
vnoremap <C-k> :m '<-2<CR>gv=gv

" ARROW KEYS ARE UNACCEPTABLE
noremap <Left> <Nop>
noremap <Right> <Nop>
noremap <Up> <Nop>
noremap <Down> <Nop>

" find merge conflict markers
nnoremap <silent> <leader>fc <ESC>/\v^[<=>]{7}( .*\|$)<CR>

" Replace selection with text in clipboard
vnoremap r "_dP

" Remember last location in file, but not for commit messages.
" see :help last-position-jump
au BufReadPost * if &filetype !~ '^git\c' && line("'\"") > 0 && line("'\"") <= line("$")
  \| exe "normal! g`\"" | endif

" Spell only for certain files
autocmd FileType markdown setlocal spell spelllang=en,de
autocmd BufNewFile,BufRead COMMIT_EDITMSG setlocal spell spelllang=en,de

" enable project based vimrc
set exrc
set secure

" --- End ---
" This is required for Vundle
filetype plugin indent on
